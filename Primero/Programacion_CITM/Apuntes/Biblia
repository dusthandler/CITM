#include<stdio.h>
#include<time.h>
#include<math.h>
#define PI 3.14159265

int main() {

	//while
	/*
	int cont = 1, n;
	printf("dame un numero\n");
	scanf_s("%i", &n);
	while (cont <= n) {
		printf("%i\t", cont);
		cont++;
	}
	printf("\n");
	system("pause");
}
	*/

	//do while
	/*
	int cont = 1, n;
	printf("dame un numero y imprimo los impares\n");
	scanf_s("%i", &n);
	do {
		if (cont % 2 == 1) {
			printf("%i\t", cont);
		}
		cont++;
	} while (cont <= n);
	printf("\n");
	system("pause");
	return 0;
}
	*/

	//for
	/*
	int cont, n;
	printf("dame un numero y si es par te contare pares y si es impar te contare pares\n");
	scanf_s("%i", &n);
	for (cont = 1; cont <= n; cont++) {
		if (n % 2 == 0 && cont % 2 == 0) {
			printf("%i\t", cont);
		}
		else if (n % 2 == 1 && cont % 2 == 1) {
			printf("%i\t", cont);
		}

	}
	printf("\n");
	system("pause");
	return 0;
}
	*/

	//Random
	/*
	int n, random;
	srand(time(NULL));
	printf("dame un numero del 5 al 15\n");
	scanf_s("%i", &n);
	random = ((rand() % 11) + 5);
	printf("el numero random es %i\n", random);
	if (random <= n) {
		printf("%i es mayor que %i", n, random);
	}
	else if (random == n) {
		printf("los numeros son iguales");
	}
	else {
		printf("%i es menor que %i", random, n);
	}
	printf("\n");
	system("pause");
	return 0;
}
	*/

	//switch
	/*
	int opcion, n1, n2;
	float n3, n4;
	char seguir;
	do {
		printf("sumar <1> \trestar <2> \tmultiplicar <3> \tdividir <4> \t potencia <5>\n");
		scanf_s("%i", &opcion);
		switch (opcion) {
		case 1:
			printf("suma\n");
			printf("dame el primer numero\n");
			scanf_s("%i", &n1);
			printf("dame el segundo numero\n");
			scanf_s("%i", &n2);
			printf("el resultado es %i", n1 + n2);
			break;
		case 2:
			printf("resta\n");
			printf("dame el primer numero\n");
			scanf_s("%i", &n1);
			printf("dame el segundo numero\n");
			scanf_s("%i", &n2);
			printf("el resultado es %i", n1 - n2);
			break;
		case 3:
			printf("multiplicacion\n");
			printf("dame el primer numero\n");
			scanf_s("%i", &n1);
			printf("dame el segundo numero\n");
			scanf_s("%i", &n2);
			printf("el resultado es %i", n1 * n2);
			break;
		case 4:
			printf("division\n");
			printf("dame el primer numero\n");
			scanf_s("%i", &n1);
			printf("dame el segundo numero\n");
			scanf_s("%i", &n2);
			printf("el resultado es %i", n1 / n2);
			break;
		case 5:
			printf("potencia\n");
			printf("dame el primer numero\n");
			scanf_s("%f", &n3);
			printf("dame la potencia\n");
			scanf_s("%f", &n4);
			printf("el resultado es %.2f", pow(n3, n4));
			break;
		default:
			printf("eso no es una opcion");

		}
		printf("\n");
		printf("quieres repetir si <s> no <n>\n");
		scanf_s(" %c", &seguir);
	} while (seguir == 's');
	printf("\n");
	system("pause");
	return 0;
}
	*/

	//#define esta creado en librerias.h para utilizar aqui el PI
/*
	float radio;
	printf("dame el radio de la circunferencia para saber su area\n");
	scanf_s("%f", &radio);
	printf("el area es %.2f\n", pow(radio, 2)*PI);
	system("pause");
	return 0;
}
	*/

	//random+switch
/*
	int opcion, n1, n2, result, resp, cont = 1;
	srand(time(NULL));
	n1 = ((rand() % 8) + 2);
	while (cont <= 7) {
		n2 = ((rand() % 8) + 2);
		opcion = ((rand() % 4) + 1);
		switch (opcion) {
		case 1:
			printf("%i+%i=", n1, n2);
			result = n1 + n2;
			scanf_s("%i", &resp);
			while (resp != result) {
				printf("%i+%i=", n1, n2);
				scanf_s("%i", result);
			}
			break;
		case 2:
			printf("%i-%i=", n1, n2);
			result = n1 - n2;
			scanf_s("%i", &resp);
			while (resp != result) {
				printf("%i-%i=", n1, n2);
				scanf_s("%i", result);
			}
			break;
		case 3:
			printf("%i*%i=", n1, n2);
			result = n1*n2;
			scanf_s("%i", &resp);
			while (result != resp) {
				printf("%i*%i=", n1, n2);
				scanf_s("%i", result);
			}
			break;
		case 4:
			printf("%i/%i=", n1, n2);
			result = n1 / n2;
			scanf_s("%i", &resp);
			while (result != resp) {
				printf("%i/%i=", n1, n2);
				scanf_s("%i", result);
			}
			break;
		}
		cont++;
	}
	system("pause");
	return 0;
}
	*/
	
//ejercicio simulacro parcial 2
/*
int i, opc, nop1, r, nop2, c, op;

srand(time(NULL));


for (i = 0; i < 7; i++) {

	opc = (rand() % 4) + 1;
	nop1 = (rand() % 8) + 2;
	nop2 = (rand() % 8) + 2;


	switch (opc) {

	case 1://+

		if (i == 0) {
			r = nop2 + nop1;
			op = r;
			printf("%i + %i = \n", nop2, nop1);
			scanf_s("%i", &c);
			if (r != c) {
				while (r != c) {
					printf("Incorrecto\n");
					printf("%i + %i = \n", nop2, nop1);
					scanf_s("%i", &c);
				}
			}
		}

		else {
			r = op + nop1;
			printf("%i + %i = \n", op, nop1);
			scanf_s("%i", &c);
			if (r != c) {
				while (r != c) {
					printf("Incorrecto\n");
					printf("%i + %i = \n", op, nop1);
					scanf_s("%i", &c);
				}
			}
			op = r;
		}
		break;

	case 2://-
		if (i == 0) {
			r = nop2 - nop1;
			op = r;
			printf("%i - %i = \n", nop2, nop1);
			scanf_s("%i", &c);
			if (r != c) {
				while (r != c) {
					printf("Incorrecto\n");
					printf("%i - %i = \n", nop2, nop1);
					scanf_s("%i", &c);
				}
			}
		}

		else {
			r = op - nop1;
			printf("%i - %i = \n", op, nop1);
			scanf_s("%i", &c);
			if (r != c) {
				while (r != c) {
					printf("Incorrecto\n");
					printf("%i - %i = \n", op, nop1);
					scanf_s("%i", &c);
				}
			}
			op = r;
		}
		break;


	case 3://*
		if (i == 0) {
			r = nop2 * nop1;
			op = r;
			printf("%i * %i = \n", nop2, nop1);
			scanf_s("%i", &c);
			if (r != c) {
				while (r != c) {
					printf("Incorrecto\n");
					printf("%i * %i = \n", nop2, nop1);
					scanf_s("%i", &c);
				}
			}
		}

		else {
			r = op * nop1;
			printf("%i * %i = \n", op, nop1);
			scanf_s("%i", &c);
			if (r != c) {
				while (r != c) {
					printf("Incorrecto\n");
					printf("%i * %i = \n", op, nop1);
					scanf_s("%i", &c);
				}
			}
			op = r;
		}

		break;

	case 4:// /
		if (i == 0) {
			r = nop2 / nop1;
			op = r;
			printf("%i / %i = \n", nop2, nop1);
			scanf_s("%i", &c);
			if (r != c) {
				while (r != c) {
					printf("Incorrecto\n");
					printf("%i / %i = \n", nop2, nop1);
					scanf_s("%i", &c);
				}
			}
		}

		else {
			r = op / nop1;
			printf("%i / %i = \n", op, nop1);
			scanf_s("%i", &c);
			if (r != c) {
				while (r != c) {
					printf("Incorrecto\n");
					printf("%i / %i = \n", op, nop1);
					scanf_s("%i", &c);
				}
			}
			op = r;
		}
		break;

	}
}

system("pause");
return 0;
}
*/

	//Ejemplo trabajar con diferentes archivos
//main.c
#include <stdio.h>
#include "prototipo.h"

int main() {
	int x, y;
	printf("dame un numero\n");
	scanf_s("%i", &x);
	printf("dame otro numero\n");
	scanf_s("%i", &y);
	printf("el mas peque単o es: %i\n", peque単o(x, y));
	system("pause");
	return 0;
}

//funciones.c
#include "prototipo.h"

int peque単o(int x, int y) {
	if (x < y) {
		return x;
	}
	else {
		return y;
	}
}

//prototipo.h
#ifndef _PROTOTIPO_H
#define _PROTOTIPO_H

int peque単o(int, int);

#endif


	//Punteros
//main.c
#include <stdio.h>
#include <stdlib.h>
#include "prototipo.h"

int main() {
	int a = 5, b = 10;

	printf("a:%i b:%i\n", a, b);
	cambiar(&a, &b);
	printf("a:%i b:%i\n", a, b);
	system("pause");
	return 0;
}

//funciones.c
#include "prototipo.h"

void cambiar(int *x, int*y) {
	int aux;
	aux = *x;
	*x = *y;
	*y = aux;
}


//prototipo.h
#ifndef _PROTOTIPO_H
#define _PROTOTIPO_H

void cambiar (int*, int*);

#endif

	//Arrays
//main.c
#include <stdio.h>
#include <time.h>
#include "prototipo.h"


int main() {
	char resp;
	int array1[6];
	srand(time(NULL));
	do{
		printf("Combinacion automatica de la primitiva\n");
		generaPrimitiva(array1);
		printf("La combinacion: ");
		imprimePrimitiva(array1);
		printf("\nQuieres volver a generar otra primitiva automatica? \n");
		scanf_s(" %c", &resp);
	} while (resp == 's');
	printf("\n");
	system("pause");
	return 0;			
}

//funciones.c
#include "prototipo.h"

	//Comprovar elementos de un array
void generaPrimitiva(int array1[6]) {
	int  i, aleatorio, j = 0;
	for (i = 0; i < 6; i++) {
		aleatorio = (rand() % 6) + 1;
		if (i == 0) {
			array1[i] = aleatorio;
		}
		else {
			j = 0;
			while (j <i) {
				if (array1[j] == aleatorio) {
					aleatorio = (rand() % 6) + 1;
					j = 0;
				}
				else {
					j++;
				}
			}
			if (j == i) {
				array1[i] = aleatorio;
			}
		}
	}
}

	//Imprimir un array
void imprimePrimitiva(int array1[6]) {
	for (int i = 0; i < 6; i++) {
		printf("%i\t", array1[i]);
	}
}

//prototipo.h
#ifndef _PROTOTIPO_H
#define _PROTOTIPO_H
void generaPrimitiva(int[]);
void imprimePrimitiva(int[]);
#endif // _PROTOTIPO_H
